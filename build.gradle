apply plugin: 'android'

apply from: 'copy_apk_task.gradle'
apply from: 'launch_app_task.gradle'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.40'
}

repositories {
    mavenCentral()
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.google.android.gms:play-services:6.1.11'
    compile 'com.android.support:appcompat-v7:23.3.0'
}

android {
    buildToolsVersion "23.0.2"
    compileSdkVersion 23
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
    }

    signingConfigs {
        release {
            storeFile file(".//!etc//kluc.zip")
            storePassword "PLACEHOLDER"
            keyAlias "multigame"
            keyPassword "PLACEHOLDER"
        }
        debug {
            storeFile file(".//!etc//debug.keystore")
            storePassword "android"
        }
    }
    buildTypes {
        release {
            //S enable when time
            minifyEnabled false
            proguardFile getDefaultProguardFile('proguard-android.txt')
            proguardFile 'proguard.cfg'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
    lintOptions {
        //XS enable
        abortOnError false
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
    }
}
